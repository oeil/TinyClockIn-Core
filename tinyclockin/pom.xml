<!--
  ~ Copyright (C) 2016 TekNux.org
  ~
  ~ This file is part of the TinyClockIn GPL Source Code.
  ~
  ~ TinyClockIn Source Code is free software: you can redistribute it and/or
  ~ modify it under the terms of the GNU General Public License as published
  ~ by the Free Software Foundation, either version 3 of the License, or (at your option)
  ~ any later version.
  ~
  ~ TinyClockIn Source Code is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  ~ without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  ~ See the GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License along with dropbitz Community Source Code.
  ~ If not, see <http://www.gnu.org/licenses/>.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.teknux</groupId>
	<artifactId>tinyclockin-core</artifactId>
	<version>2.1.0</version>
	<name>tinyclockin-core</name>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler.version}</version>
				<configuration>
					<source>${maven-compiler.source}</source>
					<target>${maven-compiler.target}</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>io.repaint.maven</groupId>
				<artifactId>tiles-maven-plugin</artifactId>
				<version>2.8</version>
				<extensions>true</extensions>
				<configuration>
					<tiles>
						<tile>io.ebean.tile:enhancement:2.7</tile>
					</tiles>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19.1</version>
				<configuration>
					<!-- Fix Maven not finding Ebean test classes. -->
					<useSystemClassLoader>false</useSystemClassLoader>
				</configuration>
				<executions>
					<execution>
						<id>default-test</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Embedded all dependencies (fat JAR) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>${maven-shade.version}</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<createDependencyReducedPom>false</createDependencyReducedPom>
							<transformers>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<manifestEntries>
										<Main-Class>org.teknux.tinyclockin.Main</Main-Class>
									</manifestEntries>
								</transformer>
							</transformers>
							<filters>
								<filter>
									<artifact>*:*</artifact>
									<excludes>
										<exclude>META-INF/*.SF</exclude>
										<exclude>META-INF/*.DSA</exclude>
										<exclude>META-INF/*.RSA</exclude>
									</excludes>
								</filter>
							</filters>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- No Fat JAR, all dependencies in a directory named libs
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<outputDirectory>${basedir}/target/</outputDirectory>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<mainClass>org.teknux.tinyclockin.Main</mainClass>
						</manifest>
						<manifestEntries>
							<Class-Path>.</Class-Path>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<outputDirectory>${basedir}/target/lib/</outputDirectory>
				</configuration>
			</plugin>
			-->

			<!-- make the final zip file -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>${maven-assembly-plugin.version}</version>
				<configuration>
					<appendAssemblyId>false</appendAssemblyId>
					<descriptors>
						<descriptor>assembly.xml</descriptor>
					</descriptors>
					<formats><format>zip</format></formats>
					<finalName>${project.name}</finalName>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>


		</plugins>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>application.properties</exclude>
				</excludes>
			</resource>
			<resource>
<!-- We need to use filtering only for application.properties, otherwise charset of i18n property files will be change by maven-->
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
				<includes>
					<include>application.properties</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/webapp</directory>
				<targetPath>webapp</targetPath>
				<includes>
					<include>**</include>
				</includes>
			</resource>
		</resources>
	</build>

	<dependencies>
		<!-- Tests -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Jetty -->
		<dependency>
			<groupId>org.teknux</groupId>
			<artifactId>jetty-bootstrap</artifactId>
			<version>${jetty-bootstrap.version}</version>
		</dependency>
		<dependency>
			<groupId>org.teknux</groupId>
			<artifactId>jetty-bootstrap-annotations</artifactId>
			<version>${jetty-bootstrap.version}</version>
		</dependency>

		<!-- Logs -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<!-- For condition in logback.xml -->
		<dependency>
			<groupId>org.codehaus.janino</groupId>
			<artifactId>janino</artifactId>
			<version>${janino.version}</version>
		</dependency>

		<!-- Jersey -->
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-server</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet</artifactId>
			<version>${jersey.version}</version>
		</dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <!--
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-moxy</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		-->

		<!-- Config -->
		<dependency>
			<groupId>org.skife.config</groupId>
			<artifactId>config-magic</artifactId>
			<version>${config-magic.version}</version>
		</dependency>

		<!-- ORM -->
		<dependency>
			<groupId>io.ebean</groupId>
			<artifactId>ebean</artifactId>
			<version>10.2.3</version>
			<exclusions>
				<exclusion>
					<groupId>com.fasterxml.jackson.core</groupId>
					<artifactId>jackson-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>io.ebean</groupId>
			<artifactId>ebean-querybean</artifactId>
			<version>${ebean.version}</version>
		</dependency>
		<dependency>
			<groupId>io.ebean</groupId>
			<artifactId>querybean-generator</artifactId>
			<version>${ebean.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- H2 database -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>${h2.version}</version>
		</dependency>

	</dependencies>

	<properties>
		<maven-compiler.source>1.8</maven-compiler.source>
		<maven-compiler.target>${maven-compiler.source}</maven-compiler.target>

		<maven-compiler.version>2.3.2</maven-compiler.version>
		<maven-source.version>2.2.1</maven-source.version>
		<maven-javadoc.version>2.9.1</maven-javadoc.version>
		<maven-shade.version>2.4.3</maven-shade.version>
		<maven-assembly-plugin.version>2.6</maven-assembly-plugin.version>

		<junit.version>4.11</junit.version>
		<mockito.version>1.9.5</mockito.version>
		<jetty-bootstrap.version>1.0.9</jetty-bootstrap.version>
		<slf4j.version>1.7.5</slf4j.version>
		<logback.version>1.0.13</logback.version>
		<janino.version>2.6.1</janino.version>
		<jersey.version>2.25.1</jersey.version>
		<config-magic.version>0.17</config-magic.version>
		<ebean.version>10.2.1</ebean.version>
		<h2.version>1.4.195</h2.version>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
</project>
